<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="$(ProjectDir)/Entity/hp.ttinclude"#>
<#@ include file="$(ProjectDir)/Entity/ma.ttinclude"#> 
<#
    var manager = Manager.Create(Host, GenerationEnvironment);
    var list = DbHelper.GetDbTables(config.ConnectionString, config.DbDatabase);
    foreach (var table in list)
    {
        var cList = DbHelper.GetDbColumns(config.ConnectionString, config.DbDatabase, table);
        table.ColumnList = cList;
    }
	foreach(var t in list){
	manager.StartNewFile(t.ClassName+".cs"); 
#>using System;	
using System.IO;
using System.Data;
using System.Data.Common;
using Dos.ORM;
using Dos.ORM.Common;

namespace YiDaBus.Com.Model
{


    [Serializable]
	public partial class <#=t.ClassName#> : Entity
    {

		public <#=t.ClassName#>():base("<#=t.TableName#>") {}

	    #region Field
		
<# foreach(DbColumn column in t.ColumnList){#>
        private <#= column.CSharpType#> _<#=column.Field#> = <#=column.DefaultString#>;
	    /// <summary>
        /// <#= column.Comment#>
        /// </summary>
        public <#= column.CSharpType#> <#=column.Field#>
        {
            get { return _<#=column.Field#>; }
            set
            {
                this.OnPropertyValueChange(_.<#=column.Field#>, _<#=column.Field#>, value);
                this._<#=column.Field#> = value;
                
            }
        }
<#}#>
		#endregion

		#region Method
		<#if(!string.IsNullOrEmpty(t.Identity)){ #>
        /// <summary>
        /// 获取实体中的标识列
        /// </summary>
        public override Field GetIdentityField()
        {
            return _.<#=t.Identity#>;
        }
		<#}#>
		<#if(!string.IsNullOrEmpty(t.PrimaryKeyString)){#>
        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        public override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {<#=t.PrimaryKeyString#> };
        }
		<#}#>
		 /// <summary>
        /// 获取列信息
        /// </summary>
        public override Field[] GetFields()
        {
            return new Field[] {<#= t.DosGetFields#> };
        }

        /// <summary>
        /// 获取值信息
        /// </summary>
        public override object[] GetValues()
        {
            return new object[] {<#= t.DosGetValues#> };
        }
		#endregion
		
		#region _
        /// <summary>
        /// 字段信息
        /// </summary>
        public class _
        {
            /// <summary>
            /// *
            /// </summary>
            public readonly static Field All = new Field("*", "<#=t.TableName#>");

			<# foreach(DbColumn column in t.ColumnList){#>/// <summary>
            /// <#= column.Comment#>
            /// </summary>
            public readonly static Field <#=column.Field#> = new Field("<#=column.Field#>", "<#=t.TableName#>", "<#=column.Comment#>");

			<#}#>

        }
		#endregion
        
    }

}
<#
	manager.EndBlock();  
}
    manager.Process(true);  
#>